daml 1.2

module Poker where

data Seat = Seat with
    player : Party
    remaining : Int
    bet : Int
        deriving (Eq, Show)

data Game = Game with
    house : Party
    pot : Int
    leftOfButton : Party
    players : [Seat]
        deriving (Eq, Show)

signatories : Game -> [Party]
signatories game = game.house :: map (.player) game.players

nextPlayer : Game -> Game
nextPlayer game = _


template CheckRound
    with
        game : Game
    where
        signatory (signatories game)
        
template BettingRound
    with
        game : Game
    where
        signatory (signatories game)

template CardDeal
    with
        game : Game
    where
        signatory (signatories game)
